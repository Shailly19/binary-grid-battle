(()=>{"use strict";const e=(e,t)=>({getName:()=>e,getMarker:()=>t}),t=(()=>{let t=null,r=null;const l=e("Player 1","X"),n=e("Player 2","O"),o=e("Computer","O"),a=document.getElementById("player01");a.addEventListener("click",(()=>{null===t?t=l:null!==t&&(r=l),a.classList.add("active1"),s.disabled=!1,c.disabled=!1}));const s=document.getElementById("player02");s.disabled=!0,s.addEventListener("click",(()=>{null===t?t=n:null!==t&&(r=n),s.classList.add("active2"),c.disabled=!1}));const c=document.getElementById("computer02");return c.disabled=!0,c.addEventListener("click",(()=>{null===t?t=o:null!==t&&(r=o),c.classList.add("active2"),s.disabled=!1})),{getCurrentPlayer:()=>t,getToswitchPlayer:()=>r,switchPlayer:()=>{const e=t;t=r,r=e},resetCurrentPlayer:()=>{t=null,r=null}}})(),r=(()=>{let e=[["","",""],["","",""],["","",""]];const t=[[[0,0],[0,1],[0,2]],[[1,0],[1,1],[1,2]],[[2,0],[2,1],[2,2]],[[0,0],[1,0],[2,0]],[[0,1],[1,1],[2,1]],[[0,2],[1,2],[2,2]],[[0,0],[1,1],[2,2]],[[0,2],[1,1],[2,0]]];return{renderBoard:()=>e,updateBoard:(t,r,l)=>t>=0&&t<3&&r>=0&&r<3&&""===e[t][r]&&(e[t][r]=l,!0),checkWin:r=>{for(const l of t){const[t,n,o]=l;if(e[t[0]][t[1]]===r&&e[n[0]][n[1]]===r&&e[o[0]][o[1]]===r)return!0}return!1},checkTie:()=>{for(let t=0;t<3;t++)for(let r=0;r<3;r++)if(""===e[t][r])return!1;return!0},resetBoard:()=>{e=[["","",""],["","",""],["","",""]]}}})(),l=r,n=(()=>{let e=!1;const r=document.querySelector("#text"),n=document.querySelector(".board").querySelectorAll(".box"),o=(n,o)=>{if(e)return;const s=Math.floor(o/3),c=o%3,d=t.getCurrentPlayer();"X"===d.getMarker()?n.classList.add("marker-text-x"):"O"===d.getMarker()&&n.classList.add("marker-text-o"),t.getToswitchPlayer(),l.updateBoard(s,c,d.getMarker())?(n.textContent=d.getMarker(),l.checkWin(d.getMarker())?(console.log(d.getName()+" is the winner"),r.textContent=d.getName()+" wins!",e=!0):l.checkTie()?(r.textContent="It's a tie!",console.log("It's a tie"),e=!0):(t.switchPlayer(),t.getCurrentPlayer().getName().includes("Computer")&&a())):console.log("Invalid move. Try again.")},a=()=>{const e=s(),t=Math.floor(Math.random()*e.length),[r,l]=e[t];setTimeout((()=>{const e=3*r+l;o(n[e],e)}),500)},s=()=>{const e=[];for(let t=0;t<3;t++)for(let r=0;r<3;r++)""===l.renderBoard()[t][r]&&e.push([t,r]);return e},c=e=>{const t=e.target,r=Array.from(n).indexOf(t);o(t,r)};return{playgame:()=>{n.forEach((e=>{e.addEventListener("click",c)}))},resetgame:()=>{l.resetBoard(),n.forEach((e=>{e.textContent="",e.classList.remove("marker-text-x"),e.classList.remove("marker-text-o"),e.removeEventListener("click",c)})),t.resetCurrentPlayer();const r=document.querySelectorAll(".select"),o=document.querySelector(".board"),a=document.querySelector("#reset"),s=document.querySelector("#text"),d=document.querySelector(".play-btn"),i=document.querySelector("#startgame");i&&(o.style.display="none",a.style.display="none",s.textContent="",i.style.display="block",d.style.display="block"),r.forEach((e=>{e.disabled=!1,e.classList.remove("active1"),e.classList.remove("active2")})),e=!1}}})(),o=n,a=document.querySelector(".play-btn"),s=document.querySelector("#startgame"),c=document.querySelector("#reset"),d=document.querySelector(".board"),i=document.querySelector("#text"),u=document.querySelector(".selection-pane");a.addEventListener("click",(()=>{u&&(u.style.display="grid",a.style.display="none")})),s.addEventListener("click",(()=>{d&&i&&(o.playgame(),a.style.display="none",c.style.display="block",d.style.display="grid",i.style.display="block",s.style.display="none",u.style.display="none")})),c.addEventListener("click",o.resetgame)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,